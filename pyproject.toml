[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [{name = "eye2bids developers"}]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
dependencies = [
    "numpy",
    "pandas>2.0",
    "pyaml",
    "rich_argparse",
    "rich"
]
description = "eyetracking data bids converter in Python"
dynamic = ["version"]
license = {text = "MIT"}
name = "eye2bids"
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
# A combination of dependencies useful for developers
dev = [
    "eye2bids[test,doc]",
    "isort",
    "black",
    "flake8",
    "flake8-use-fstring",
    "flake8-functions",
    "flake8-docstrings",
    'codespell',
    'tomli',
    'pre-commit'
]
# Requirements necessary for building the documentation
doc = [
    "myst-parser",
    "numpydoc",
    "sphinx",
    "sphinx-copybutton"
]
# For running unit and docstring tests
test = [
    "requests",
    "coverage",
    "pytest",
    "pytest-cov"
]

[project.scripts]
eye2bids = "eye2bids._cli:cli"

[tool.black]
line-length = 90

[tool.codespell]
ignore-words = ".github/codespell_ignore_words.txt"
skip = "./.git,.mypy_cache,env,venv,*/tmp,./doc/_build"

[tool.hatch.build.hooks.vcs]
version-file = "eye2bids/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["eye2bids"]

[tool.hatch.version]
source = "vcs"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
plugins = [
    "numpy.typing.mypy_plugin"
]
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "rich.*",
    "pandas",
    "pytest",
    "rich_argparse",
    "eye2bids._version"
]

[[tool.mypy.overrides]]
ignore_errors = true
module = [
    'tests.*'
]

[tool.pytest.ini_options]
addopts = "-ra --strict-config --strict-markers -q -vv --cov eye2bids --durations=0"
norecursedirs = "data"
testpaths = ["tests/"]

[tool.ruff]
include = ["pyproject.toml", "eye2bids/**/*.py", "tools/**/*.py"]
indent-width = 4
line-length = 90

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [
    "PD901",
    "N802",
    "D205",
    "B028",
    "B008",
    "N806",
    "PLR2004",
    "E721"
]
# List of all the ruff rules (includes why the rule matters)
# https://docs.astral.sh/ruff/rules/
select = [
    "ARG",
    "B",
    "C4",
    "C90",
    "D",
    "E",
    "ERA",
    "F",
    "FLY",
    "I",
    "N",
    "NPY",
    "PERF",
    "PTH",
    "PD",
    "PLR",
    "RUF",
    "SIM",
    "UP",
    "W"
]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 21

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["D100", "D103", "PLR2004"]
"__init__.py" = ["D100", "D104"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-branches
max-branches = 17
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-statements
max-statements = 71
